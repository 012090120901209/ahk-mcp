{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "mcp__ahk_mcp__AHK_File_Edit.*",
        "hooks": [
          {
            "type": "command",
            "command": "python3 \"$CLAUDE_PROJECT_DIR/.claude/hooks/run-after-edit.py\"",
            "timeout": 60
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "mcp__",
        "hooks": [
          {
            "type": "command",
            "command": "bash /mnt/c/Users/uphol/Documents/Design/Coding/Claude-Code-Development-Kit/.claude/hooks/mcp-security-scan.sh"
          }
        ]
      },
      {
        "matcher": "mcp__gemini",
        "hooks": [
          {
            "type": "command",
            "command": "bash /mnt/c/Users/uphol/Documents/Design/Coding/Claude-Code-Development-Kit/.claude/hooks/gemini-context-injector.sh"
          }
        ]
      },
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "bash /mnt/c/Users/uphol/Documents/Design/Coding/Claude-Code-Development-Kit/.claude/hooks/subagent-context-injector.sh"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "bash /mnt/c/Users/uphol/Documents/Design/Coding/Claude-Code-Development-Kit/.claude/hooks/notify.sh input"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "bash /mnt/c/Users/uphol/Documents/Design/Coding/Claude-Code-Development-Kit/.claude/hooks/notify.sh complete"
          }
        ]
      }
    ]
  },
  "permissions": {
    "defaultMode": "acceptEdits",
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(ack:*)",
      "Bash(awk:*)",
      "Bash(bzip2:*)",
      "Bash(bunzip2:*)",
      "Bash(cargo:*)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(cmake:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(cut:*)",
      "Bash(date:*)",
      "Bash(df:*)",
      "Bash(dig:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(du:*)",
      "Bash(echo:*)",
      "Bash(egrep:*)",
      "Bash(env:*)",
      "Bash(find:*)",
      "Bash(fgrep:*)",
      "Bash(gcc:*)",
      "Bash(g++:*)",
      "Bash(git:*)",
      "Bash(grep:*)",
      "Bash(gunzip:*)",
      "Bash(gzip:*)",
      "Bash(head:*)",
      "Bash(hg:*)",
      "Bash(host:*)",
      "Bash(htop:*)",
      "Bash(id:*)",
      "Bash(javac:*)",
      "Bash(jest:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(kubectl:*)",
      "Bash(ln:*)",
      "Bash(locate:*)",
      "Bash(ls:*)",
      "Bash(make:*)",
      "Bash(mkdir:*)",
      "Bash(mocha:*)",
      "Bash(mv:*)",
      "Bash(mvn:*)",
      "Bash(node:*)",
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm test:*)",
      "Bash(npx tsc:*)",
      "Bash(npx:*)",
      "Bash(paste:*)",
      "Bash(ping:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(poetry:*)",
      "Bash(podman:*)",
      "Bash(printenv:*)",
      "Bash(ps:*)",
      "Bash(pwd)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pytest:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(rmdir:*)",
      "Bash(rustc:*)",
      "Bash(sed:*)",
      "Bash(sort:*)",
      "Bash(stat:*)",
      "Bash(svn:*)",
      "Bash(tail:*)",
      "Bash(tar:*)",
      "Bash(tee:*)",
      "Bash(time:*)",
      "Bash(touch:*)",
      "Bash(tr:*)",
      "Bash(uniq:*)",
      "Bash(uname:*)",
      "Bash(unxz:*)",
      "Bash(unzip:*)",
      "Bash(virtualenv:*)",
      "Bash(wget:*)",
      "Bash(whoami)",
      "Bash(xargs:*)",
      "Bash(xz:*)",
      "Bash(yarn:*)",
      "Bash(go:*)",
      "Bash(coverage:*)",
      "Bash(npm install:*)",
      "Bash(gh repo create:*)",
      "Bash(npm run:*)",
      "Bash(gh:*)",
      "Bash(ssh:*)",
      "Bash(npm:*)",
      "Bash(./node_modules/.bin/vsce:*)",
      "Bash(tsc --noEmit)",
      "Bash(tsc:*)",
      "Bash(vsce package:*)",
      "Bash(vsce:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:code.visualstudio.com)",
      "Bash(/usr/bin/node:*)",
      "Bash(pkill:*)",
      "Bash(./node_modules/.bin/tsc:*)",
      "Bash(claude mcp:*)",
      "Bash(\"/mnt/c/Program Files/AutoHotkey/v2/AutoHotkey64.exe\" /ErrorStdOut \"/mnt/c/Users/uphol/Documents/Design/Coding/AHK/!Running/_Tableau.ahk\")",
      "Bash(\"/mnt/c/Program Files/AutoHotkey/v2/AutoHotkey64.exe\" /ErrorStdOut \"GUI_ButtonMaker.ahk\")",
      "SlashCommand(/ahk-orchestrator)",
      "Bash(\"/mnt/c/Program Files/AutoHotkey/v2/AutoHotkey64.exe\" /ErrorStdOut \"TestPaddedButtons.ahk\")"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}
